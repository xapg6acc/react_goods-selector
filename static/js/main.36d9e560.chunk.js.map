{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","selectGood","good","setState","includes","filter","item","removeGood","this","currentTitle","slice","previousTitle","join","title","length","className","type","onClick","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,WAAa,SAACC,GACZ,EAAKC,UAAS,SAAAJ,GACZ,OAAIA,EAAMC,cAAcI,SAASF,GACxB,CACLF,cAAeD,EAAMC,cAClBK,QAAO,SAACC,GAAD,OAAUA,IAASJ,MAI1B,CACLF,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BE,S,EAK9CK,WAAa,WACX,EAAKJ,SAAS,CAAEH,cAAe,M,4CAGjC,WAAU,IAAD,OACCA,EAAkBQ,KAAKT,MAAvBC,cACFS,EAAeT,EAAcU,OAAO,GACpCC,EAAgBX,EAAcU,MAAM,GAAI,GAAGE,KAAK,MAClDC,EAAQ,GAEZ,OAAQb,EAAcc,QACpB,KAAK,EACHD,EAAQ,oBACR,MAEF,KAAK,EACHA,EAAK,UAAMb,EAAc,GAApB,gBACL,MAEF,QACEa,EAAK,UAAMF,EAAN,gBAA2BF,EAA3B,iBAIT,OACE,sBAAKM,UAAU,MAAf,UACE,6BAAKF,IAEJb,EAAcc,QAAU,wBAAQE,KAAK,SAASC,QAAST,KAAKD,WAApC,mBAEzB,6BACGV,EAAgBqB,KAAI,SAAAhB,GAAI,OACvB,+BACGA,EAED,wBAAQc,KAAK,SAASD,UAAU,SAASE,QAAS,WAAO,EAAKhB,WAAWC,IAAzE,SAEIF,EAAcI,SAASF,GACnB,SACA,aAPDA,e,GApDHiB,IAAMC,WAsETtB,ICzFfuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.36d9e560.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {};\n\ntype State = {\n  selectedGoods: string[]\n};\n\nclass App extends React.Component<Props, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  selectGood = (good: string) => {\n    this.setState(state => {\n      if (state.selectedGoods.includes(good)) {\n        return {\n          selectedGoods: state.selectedGoods\n            .filter((item) => item !== good),\n        };\n      }\n\n      return {\n        selectedGoods: [...state.selectedGoods, good],\n      };\n    });\n  };\n\n  removeGood = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n    const currentTitle = selectedGoods.slice(-1);\n    const previousTitle = selectedGoods.slice(0, -1).join(', ');\n    let title = '';\n\n    switch (selectedGoods.length) {\n      case 0:\n        title = 'No goods selected';\n        break;\n\n      case 1:\n        title = `${selectedGoods[0]} is selected`;\n        break;\n\n      default: {\n        title = `${previousTitle} and ${currentTitle} are selected`;\n      }\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>{title}</h1>\n        {/* eslint-disable-next-line */}\n        {selectedGoods.length && <button type=\"button\" onClick={this.removeGood}>Clear</button>}\n\n        <ol>\n          {goodsFromServer.map(good => (\n            <li key={good}>\n              {good}\n              {/* eslint-disable-next-line */}\n              <button type=\"button\" className=\"button\" onClick={() => {this.selectGood(good)}}>\n                {\n                  selectedGoods.includes(good)\n                    ? 'Remove'\n                    : 'Select'\n                }\n              </button>\n            </li>\n          ))}\n        </ol>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}